Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    WHERE

Grammar

Rule 0     S' -> query
Rule 1     query -> select
Rule 2     select -> SELECT list FROM table
Rule 3     table -> NAME
Rule 4     list -> *
Rule 5     list -> NAME

Terminals, with rules where they appear

*                    : 4
FROM                 : 2
NAME                 : 3 5
SELECT               : 2
WHERE                : 
error                : 

Nonterminals, with rules where they appear

list                 : 2
query                : 0
select               : 1
table                : 2

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . select
    (2) select -> . SELECT list FROM table

    SELECT          shift and go to state 3

    query                          shift and go to state 2
    select                         shift and go to state 1

state 1

    (1) query -> select .

    $end            reduce using rule 1 (query -> select .)


state 2

    (0) S' -> query .



state 3

    (2) select -> SELECT . list FROM table
    (4) list -> . *
    (5) list -> . NAME

    *               shift and go to state 5
    NAME            shift and go to state 4

    list                           shift and go to state 6

state 4

    (5) list -> NAME .

    FROM            reduce using rule 5 (list -> NAME .)


state 5

    (4) list -> * .

    FROM            reduce using rule 4 (list -> * .)


state 6

    (2) select -> SELECT list . FROM table

    FROM            shift and go to state 7


state 7

    (2) select -> SELECT list FROM . table
    (3) table -> . NAME

    NAME            shift and go to state 8

    table                          shift and go to state 9

state 8

    (3) table -> NAME .

    $end            reduce using rule 3 (table -> NAME .)


state 9

    (2) select -> SELECT list FROM table .

    $end            reduce using rule 2 (select -> SELECT list FROM table .)

